<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="HelloWorld" default="build" basedir=".">
     <!-- define names of directories -->
     <property name="src" location="src"/>
     <property name="build" location="build"/>
     <property name="classes" location="${build}/classes"/>
     <!-- define all targets -->
     <target name="compile">
         <mkdir dir="${classes}"/>
         <javac srcdir="${src}" destdir="${classes}" includeAntRuntime="false"/>
     </target>
     <target name="run" depends="compile">
         <java classname="${ant.project.name}" classpath="${classes}" fork="true"/>
     </target>
    <target name="package" depends="compile">
         <jar destfile="${build}/${ant.project.name}.jar" basedir="${classes}">
             <manifest>
                 <attribute name="Mainâ€“Class" value="${ant.project.name}"/>
             </manifest>
         </jar>
     </target>
     <target name="clean">
         <delete dir="${build}"/>
     </target>

  <target name="checkstyle"
  description="Generates a report of code convention violations."
	depends="init-checkstyle">
  <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
         classpath="/usr/share/java/checkstyle.jar"/>

  <!-- See http://checkstyle.sourceforge.net/anttask.html
       for full options of using checkstyle with ant-->
  <checkstyle config="checkstyle.xml"
              failureProperty="checkstyle.failure"
              failOnViolation="false">
    <formatter type="xml" tofile="checkstyle_report.xml"/>
    <fileset dir="src" includes="**/*.java"/>
  </checkstyle>
</target>

<target name="init-checkstyle" depends="resolve">
	<path id="checkstyle.lib.path">
            <fileset dir="lib" includes="*.jar"/>
	</path>
	<!-- Sevntu custom checks are retrieved by Ivy into lib folder
       and will be accessible to checkstyle-->
	<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
           classpathref="checkstyle.lib.path"/>
</target>

<!-- ##########################################################################
     ####################### target: resolve ##################################
     ########################################################################## -->
    <target name="resolve" description="retrieve dependencies with ivy" depends="init-ivy">
    	<ivy:settings file="ivysettings.xml" />
        <ivy:retrieve />
    </target>


<!-- ##########################################################################
     ####### Downloading and setup Ivy for managing dependencies ##############
     ##########################################################################-->
    <property name="ivy.install.version" value="2.5.0" />
    <!-- You may place ivy.jar into other folder if you want to keep folder lib clean-->
    <property name="ivy.jar.dir" value="lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site
             so that it can be used even without any special installation -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>

        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
	 

</project>

